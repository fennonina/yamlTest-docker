# This is a basic workflow to help you get started with Actions

name: SHELLSSHONE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
      inputs:
        RUN_TUNNEL:
          description: 'ENTER CF TUNNEL RUUNER CMD :'
          required: true
        ngork_token:
          description: 'ENTER NGROK AUTH TOKEN :'
          required: true
        ngrok_port:
          description: 'TCP PORT TO FORWARD with ngrok :'
          required: true

defaults:
  run:
    shell: bash
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: primary configs
        run: |
          sudo apt update -y
          mkdir $HOME/logs
          sudo apt-get install python3 -y
          sudo apt-get install pip -y
          
      - name: user setting.
        run: |
          wget https://raw.githubusercontent.com/fennonina/ready-codes/main/CreatUser_f1ver
          chmod +x CreatUser_f1ver
          ./CreatUser_f1ver
      - name: pulling dockers.
        run: |
          sudo docker pull guacamole/guacamole
          echo -------------[ pulled out ]-------------
          sleep 5
          sudo docker pull shellngn/pro:latest
          echo -------------[ pulled out ]-------------
          sleep 5
          sudo docker pull portainer/portainer-ce:latest
          echo -------------[ pulled out ]-------------
          sleep 5
      - name: setting up docker image
        run: |
          sudo docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest
          echo -------[ successful ]-------------
          sudo docker run -d --name some-guacamole --link some-guacd:guacd--link some-postgres:postgres -e POSTGRES_DATABASE=guacamole_db -e POSTGRES_USER=guacamole_user -e POSTGRES_PASSWORD=some_password -p 8080:8080 guacamole/guacamole
          echo -------[ successful ]-------------
      - name: Setting up NGROK.
        run: |
            wget https://github.com/fennonina/systemd-ngrok/archive/refs/heads/master.zip
            unzip master.zip
            cd systemd-ngrok-master
            sudo chmod +x install.sh 
            sudo sh install.sh ${{ github.event.inputs.ngork_token }}
            nohup ngrok tcp ${{ github.event.inputs.ngork_port }} --log=stdout > ngrok.log &
      - name: your details.
        run: |
          echo -------------------------------
          echo    
          echo    username : f1ver
          echo    password : 111600
          echo    
          echo    shellngnPORT : 8080
          echo    portainerPORT : 9443
          echo    
          echo    NGROK URL : $WEBHOOK_URL
          echo    LISTENNING ON : ${{ github.event.inputs.ngrok_port }} TCP
          echo    
          echo -------------------------------
      - name: settingup cloudflared.
        run: ${{ github.event.inputs.RUN_TUNNEL }}
      - name: keep running.
        run: sleep 6h
        
        
