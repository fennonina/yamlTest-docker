# This is a basic workflow to help you get started with Actions

name: shellNgnDocker

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      username:
        description: ' Enter a username ; Example: f1ver'
        required: true
      password:
        description: ' Enter a password at least 4 digits'
        required: true
      custom_url:
        description: 'Enter a custom url | Example : jhons-pigeon'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 180

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: updating apt repos
        run: sudo apt-get update -y
             apt install -y pip python3 &>dev/null & sleep 15
      - name: setting up user
        run: |
            if [[ -z "${{ github.event.inputs.username }}" ]]; then
              echo "Please set 'LINUX_USER_PASSWORD' for user: $USER"
              exit 3
            fi
           
            sudo -i
            sudo useradd -m ${{ github.event.inputs.username }}
            sudo adduser ${{ github.event.inputs.username }} sudo
            echo "${{ github.event.inputs.username }}:${{ github.event.inputs.password }}" | sudo chpasswd
            sudo sed -i 's/\/bin\/sh/\/bin\/bash/g' /etc/passwd
            sudo echo -e "${{ github.event.inputs.password }}\n${{ github.event.inputs.password }}" | sudo passwd "$USER"       
      - name: setting up sehllngn
        run: |
            docker pull shellngn/pro:latest
            docker run --mount source=shellngn-data,target=/home/node/server/data -p 8080:8080 -e HOST=0.0.0.0 shellngn/pro:latest > /dev/null 2>&1 &
      - name: setting up webssh
        run: |
            pip install webssh &>/dev/null & sleep 10
            wssh &>/dev/null & sleep 3
      - name: getting url
        run: |
            export RNDM=$RANDOM
            export customurl=${{ github.event.inputs.username }}
            export LTURL=$customurl-$RNDM
            npm install -g localtunnel
            echo --------------------------------------------------
            echo
            echo     USERNAME : ${{ github.event.inputs.username }}
            echo     PASSWORD : ${{ github.event.inputs.password }}
            echo
            echo     YOUR URLs WILL BE:
            echo     webShh : https://$LTURL-webssh.loca.lt
            echo     Shellngn : https://$LTURL-shellngn.loca.lt
            echo
            echo --------------------------------------------------
            echo  PLEASE WAIT AT LEAST 10s BEFORE OPENING THE URLs.
            echo --------------------------------------------------
            lt -s $LTURL-webssh -p 8888 &>/dev/null & sleep 5
            lt -s $LTURL-shellngn -p 8080 && sleep 6h
